name: build tauri-ygo

on:
  push:
    branches: [ main ]
    
jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Setup Node.js v22.18.0
      uses: actions/setup-node@v4
      with:
        node-version: '22.18.0'

    - name: Install Rust (toolchain 1.88.0)
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.88.0
        
    - name: Install wget and unzip
      shell: powershell
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        choco install wget unzip -y

    - name: Install Java21
      shell: cmd
      run: |
        wget https://download.oracle.com/java/21/latest/jdk-21_windows-x64_bin.zip
        unzip jdk-21_windows-x64_bin.zip
    
    - name: Install Android sdk
      shell: cmd
      run: |
        mkdir android-sdk
        cd android-sdk
        mkdir platform-tools
        wget https://dl.google.com/android/repository/commandlinetools-win-13114758_latest.zip
        unzip commandlinetools-win-13114758_latest.zip
        .\cmdline-tools\bin\sdkmanager.bat "platform-tools" "build-tools;34.0.0" "platforms;android-34"

    - name: Install Android ndk r27
      shell: cmd
      run: |
        wget https://googledownloads.cn/android/repository/android-ndk-r27d-windows.zip
        unzip android-ndk-r27d-windows.zip

    - name: NPM Init
      shell: cmd
      run: |
        npm install
    
    - name: Android Init
      shell: cmd
      env:
        JAVA_HOME: ${{ github.workspace }}\jdk-21.0.8
        ANDROID_HOME: ${{ github.workspace }}\android-sdk
        NDK_HOME: ${{ github.workspace }}\android-ndk-r27d
      run: |
        npm run tauri android init

    - name: Android copy
      run: |
        npm run copy

    - name: Android build
      shell: cmd
      env:
        JAVA_HOME: ${{ github.workspace }}\jdk-21.0.8
        NDK_HOME: ${{ github.workspace }}\android-ndk-r27d
      run: |
        npm run tauri android build

    - name: Decode Keystore File
      shell: pwsh
      run: |
        $bytes = [System.Convert]::FromBase64String("${{ secrets.KEYSTORE_FILE }}")
        [System.IO.File]::WriteAllBytes("tauri-ygo.jks", $bytes)

    - name: Sign apk
      shell: cmd
      run: |
        dir "%ANDROID_HOME%\build-tools"
        "%ANDROID_HOME%\build-tools\34.0.0\apksigner.bat" sign --ks ./tauri-ygo.jks --ks-key-alias ${{ secrets.KEY_ALIAS }} --key-pass pass:${{ secrets.KEYSTORE_PASSWORD }} --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} --out .\windows_build\tauri-ygo.apk .\src-tauri\gen\android\app\build\outputs\apk\universal\release\app-universal-release-unsigned.apk

    - name: Windows build
      shell: cmd
      run: |
        npm run tauri build
    
    - name: Copy
      shell: cmd
      run: |
        mkdir windows_build
        set "found_msi="
        set "found_exe="

        for %%f in (.\src-tauri\target\release\bundle\msi\*.msi) do (
            if not defined found_msi (
                copy "%%f" "windows_build\setup.msi"
                set "found_msi=1"
            )
        )

        for %%f in (.\src-tauri\target\release\bundle\nsis\*.exe) do (
            if not defined found_exe (
                copy "%%f" "windows_build\setup.exe"
                set "found_exe=1"
            )
        )


    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: tauri-ygo.apk
        path: .\src-tauri\gen\android\app\build\outputs\apk\universal\release\app-universal-release-unsigned.apk

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: tauri-ygo-setup.exe
        path: .\windows_build\setup.exe

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: tauri-ygo-setup.msi
        path: .\windows_build\setup.msi

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: tauri-ygo.exe
        path: .\src-tauri\target\release\tauri-ygo.exe

    # - name: Upload
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: .\src-tauri\gen\android\app\build\outputs\apk\universal\release\app-universal-release-unsigned.apk
    #     asset_name: app-universal-release-unsigned.apk
    #     asset_content_type: application/octet-stream
