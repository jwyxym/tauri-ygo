name: build tauri-ygo

on:
  push:
    branches:
      - main
    
jobs:
  build-android:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install wget and unzip
      shell: powershell
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        choco install wget unzip -y

    - name: Install Java21
      shell: cmd
      run: |
        wget https://download.oracle.com/java/21/latest/jdk-21_windows-x64_bin.zip
        unzip jdk-21_windows-x64_bin.zip
    
    - name: Install Android sdk
      shell: cmd
      run: |
        mkdir android-sdk
        cd android-sdk
        mkdir platform-tools
        wget https://dl.google.com/android/repository/commandlinetools-win-13114758_latest.zip
        set ANDROID_SDK_ROOT=%cd%
        mkdir cmdline-tools
        unzip commandlinetools-win-13114758_latest.zip -d cmdline-tools
        cd cmdline-tools
        ren cmdline-tools latest
        .\latest\bin\sdkmanager.bat "platform-tools" "build-tools;34.0.0" "platforms;android-34"

    - name: Install Android ndk r27
      shell: cmd
      run: |
        wget https://googledownloads.cn/android/repository/android-ndk-r27d-windows.zip
        unzip android-ndk-r27d-windows.zip

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.18.0'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.88.0

    - name: Write Rust File
      shell: cmd
      run: |
        cd src-tauri
        copy tauri.conf.android.json tauri.conf.json

    - name: NPM Init
      shell: cmd
      run: |
        npm install
    
    - name: Android Init
      shell: cmd
      env:
        JAVA_HOME: ${{ github.workspace }}\jdk-21.0.8
        ANDROID_HOME: ${{ github.workspace }}\android-sdk
        NDK_HOME: ${{ github.workspace }}\android-ndk-r27d
      run: |
        npm run tauri android init

    - name: Android copy
      run: |
        npm run copy

    - name: Android icon
      run: |
        wget https://code.moenext.com/mycard/hd-arts/-/raw/master/arts/84477320.jpg
        npm run tauri icon -p 84477320.jpg

    - name: Android build
      shell: cmd
      env:
        JAVA_HOME: ${{ github.workspace }}\jdk-21.0.8
        NDK_HOME: ${{ github.workspace }}\android-ndk-r27d
      run: |
        npm run tauri android build

    - name: Decode Keystore File
      shell: pwsh
      run: |
        $base64String = "${{ secrets.KEYSTORE_FILE }}"
        $cleanBase64 = $base64String -replace "`r`n|`n|\s", ""
        $bytes = [System.Convert]::FromBase64String($cleanBase64)
        [System.IO.File]::WriteAllBytes("tauri-ygo.jks", $bytes)

    - name: Sign apk
      shell: cmd
      run: |
        mkdir build
        "%ANDROID_HOME%\build-tools\34.0.0\apksigner.bat" sign --ks ./tauri-ygo.jks --ks-key-alias ${{ secrets.KEY_ALIAS }} --key-pass pass:${{ secrets.KEYSTORE_PASSWORD }} --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} --out .\build\tauri-ygo.apk .\src-tauri\gen\android\app\build\outputs\apk\universal\release\app-universal-release-unsigned.apk

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: tauri-ygo.apk
        path: .\build\tauri-ygo.apk

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.18.0'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.88.0

    - name: Install wget and unzip
      shell: powershell
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        choco install wget unzip zip -y

    - name: Download Assets
      shell: cmd
      run: |
        cd .ci
        wget https://github.com/mycard/ygopro-database/raw/refs/heads/master/locales/zh-CN/cards.cdb
        wget https://github.com/mycard/ygopro-database/raw/refs/heads/master/locales/zh-CN/strings.conf
        wget https://github.com/Fluorohydride/ygopro/raw/refs/heads/master/lflist.conf
        wget https://github.com/jwyxym/card-pics/releases/download/pics/pics.zip
        unzip pics.zip
        zip -9 -r assets.zip strings.conf cardinfo.conf cards.cdb lflist.conf sound textures pics
        cd ..
        copy .ci\assets.zip src-tauri\assets.zip

    - name: Write Rust File
      shell: cmd
      run: |
        xcopy .ci src-tauri /s /Y /e /I
        cd src-tauri
        copy tauri.conf.windows.json tauri.conf.json

    - name: NPM Init
      shell: cmd
      run: |
        npm install

    - name: Windows build
      shell: cmd
      run: |
        npm run tauri build
    
    - name: Copy
      shell: cmd
      run: |
        set "found_msi="
        set "found_exe="
        mkdir build

        for %%f in (.\src-tauri\target\release\bundle\msi\*) do (
            if not defined found_msi (
                copy "%%f" ".\build\tauri-ygo-windows.msi"
                set "found_msi=1"
            )
        )

        for %%f in (.\src-tauri\target\release\bundle\nsis\*) do (
            if not defined found_exe (
                copy "%%f" ".\build\tauri-ygo-windows.exe"
                set "found_exe=1"
            )
        )

    - name: Upload File
      uses: actions/upload-artifact@v4
      with:
        name: assets.zip
        path: .\src-tauri\assets.zip

    - name: Upload File
      uses: actions/upload-artifact@v4
      with:
        name: tauri-ygo-windows.exe
        path: .\build\tauri-ygo-windows.exe

    - name: Upload File
      uses: actions/upload-artifact@v4
      with:
        name: tauri-ygo-windows.msi
        path: .\build\tauri-ygo-windows.msi

    - name: Upload File
      uses: actions/upload-artifact@v4
      with:
        name: tauri-ygo.exe
        path: .\src-tauri\target\release\tauri-ygo.exe

  update-gitcode:
    name: Delete GitCode Release
    needs: [build-android, build-windows]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Upload to GitCode
        shell: cmd
        run: |
          pip install requests
          python .ci\update.py ${{ secrets.GITCODE_ACCESS_TOKEN }}

  upload-gitcode:
    name: Upload Exe to GitCode
    needs: [update-gitcode]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: build

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Upload Exe
        shell: cmd
        run: |
          copy .ci\upload.py build\upload.py
          cd build
          pip install requests
          python upload.py ${{ secrets.GITCODE_ACCESS_TOKEN }} tauri-ygo.exe/tauri-ygo.exe

  upload-gitcode-apk:
    name: Upload Apk to GitCode
    needs: [update-gitcode]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: build

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Upload Apk
        shell: cmd
        run: |
          copy .ci\upload.py build\upload.py
          cd build
          pip install requests
          python upload.py ${{ secrets.GITCODE_ACCESS_TOKEN }} tauri-ygo.apk/tauri-ygo.apk

  upload-gitcode-assets_zip:
    name: Upload Assets to GitCode
    needs: [update-gitcode]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: build

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Upload Zip
        shell: cmd
        run: |
          copy .ci\upload.py build\upload.py
          cd build
          pip install requests
          python upload.py ${{ secrets.GITCODE_ACCESS_TOKEN }} assets.zip/assets.zip

  upload-gitcode-windows_msi:
    name: Upload Windows Msi to GitCode
    needs: [update-gitcode]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: build

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Upload Setup Msi
        shell: cmd
        run: |
          copy .ci\upload.py build\upload.py
          cd build
          pip install requests
          python upload.py ${{ secrets.GITCODE_ACCESS_TOKEN }} tauri-ygo-windows.msi/tauri-ygo-windows.msi


  upload-gitcode-windows_exe:
    name: Upload Windows Exe to GitCode
    needs: [update-gitcode]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: build

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Upload Setup Exe
        shell: cmd
        run: |
          copy .ci\upload.py build\upload.py
          cd build
          pip install requests
          python upload.py ${{ secrets.GITCODE_ACCESS_TOKEN }} tauri-ygo-windows.exe/tauri-ygo-windows.exe

  create-release:
    name: Create Release with All Files
    needs: [build-android, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: build

      - name: 删除 Tag 为 release-latest 的 Release
        run: |
          TAG_NAME=release-latest
          gh release delete "$TAG_NAME" --yes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch --tags
          git tag -d release-latest || true
          git push origin :refs/tags/release-latest || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-latest
          release_name: release-latest
          draft: false
          prerelease: false

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/tauri-ygo.apk/tauri-ygo.apk
          asset_name: tauri-ygo.apk
          asset_content_type: application/octet-stream

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/tauri-ygo-windows.msi/tauri-ygo-windows.msi
          asset_name: tauri-ygo-windows.msi
          asset_content_type: application/octet-stream

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/tauri-ygo-windows.exe/tauri-ygo-windows.exe
          asset_name: tauri-ygo-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/tauri-ygo.exe/tauri-ygo.exe
          asset_name: tauri-ygo.exe
          asset_content_type: application/octet-stream

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/assets.zip/assets.zip
          asset_name: assets.zip
          asset_content_type: application/octet-stream

